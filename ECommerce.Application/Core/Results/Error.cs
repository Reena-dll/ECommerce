namespace ECommerce.Application.Core.Results;

public sealed record Error(string Code, string Description)
{
    public static readonly Error UserNotExist = new("UserNotExist", "The specified user does not exist.");
    public static readonly Error UserExist = new("UserExist", "The specified user does exist.");
    public static readonly Error RouteNotExist = new("RouteNotExist", "The specified route does not exist.");
    public static readonly Error RoleNotExist = new("RoleNotExist", "The specified role does not exist.");
    public static readonly Error PermissionNotExist = new("PermissionNotExist", "The specified permission does not exist.");
    public static readonly Error AgencyNotExist = new("AgencyNotExist", "The specified agency does not exist.");
    public static readonly Error CompanyNotExist = new("CompanyNotExist", "The specified company does not exist.");
    public static readonly Error AgencyHasUsers = new("AgencyHasUsers", "The agency cannot be deleted because it has associated users.");
    public static readonly Error BusinessUnitNotExist = new("BusinessUnitNotExist", "The specified BusinessUnit does not exist.");
    public static readonly Error SeasonNotExist = new("SeasonNotExist", "The specified season does not exist.");
    public static readonly Error AirportNotExist = new("AirportNotExist", "The specified airport does not exist.");
    public static readonly Error CapacityNotExist = new("CapacityNotExist", "The specified capacity does not exist.");
    public static readonly Error FlightPriceNotExist = new("FlightPriceNotExist", "The specified flight price does not exist.");
    public static readonly Error UserNotFound = new("UserNotFound", "The specified user does not exist Email or Old password is not match");
    public static readonly Error InvalidCode = new("InvalidCode", "The provided code is invalid.");
    public static readonly Error InvalidToken = new("InvalidToken", "The provided token is invalid.");
    public static readonly Error InvalidParams = new("InvalidParam", "The provided params are invalid.");
    public static readonly Error RouteNameAlreadyExists = new("RouteNameAlreadyExists", "A route with this name already exists.");
    public static readonly Error OperatingAirlineAlreadyExists = new("OperatingAirlineAlreadyExists", "A Operating Airline with this name already exists.");
    public static readonly Error BusinessUnitAlreadyExists = new("BusinessUnitAlreadyExists", "A BusinessUnit with this name already exists.");
    public static readonly Error AirportNameAlreadyExists = new("AirportNameAlreadyExists", "An airport with this name already exists.");
    public static readonly Error NotificationTemplateNotExist = new("NotificationTemplateNotExist", "The specified notification template does not exist.");
    public static readonly Error NotificationTemplateNotExistForSend = new("NotificationTemplateNotExist", "The specified notification template does not exist. For this reason mail is not send.");
    public static readonly Error NotificationTemplateDuplicate = new("NotificationTemplateDuplicate", "The specified notification template is already exist.");
    public static readonly Error NotificationNotExist = new("NotificationNotExist", "The specified notification is not exist.");
    public static readonly Error PriceProfileDuplicate = new("PriceProfileDuplicate", "The specified price profile is already exist.");
    public static readonly Error PriceProfileNotExist = new("PriceProfileNotExist", "The specified price profile is not exist.");
    public static readonly Error PriceProfileNotDeleted = new("PriceProfileNotDeleted", "The specified price profile cannot be deleted because there are related fare levels.");
    public static readonly Error FareLevelDuplicate = new("FareLevelDuplicate", "The specified fare level is already exist.");
    public static readonly Error SeasonDuplicate = new("SeasonDuplicate", "The specified season is already exist.");
    public static readonly Error SubSeasonDuplicate = new("SubSeasonDuplicate", "The specified sub season is already exist.");
    public static readonly Error CapacityDuplicate = new("CapacityDuplicate", "This record exists in the system.");
    public static readonly Error FareLevelNotExist = new("FareLevelNotExist", "The specified fare level is not exist.");
    public static readonly Error OperatingAirlineNotExist = new("OperatingAirline", "The specified Operating Airline does not exist.");
    public static readonly Error FileNotExist = new("FileNotExist", "The specified file does not exist.");
    public static readonly Error NoRoutesFoundForBusinessUnit = new("NoRoutesFoundForBusinessUnit", "No routes found for the specified BusinessUnit.");
    public static readonly Error HasSameRole = new("HasSameRole", "Same role available.");
    public static readonly Error HasSamePermission = new("HasSamePermission", "Same Permission available.");
    public static readonly Error HasSameAgency = new("HasSameAgency", "Same Agency available.");
    public static readonly Error HasSameCompany = new("HasSameCompany", "Same Company available.");
    public static readonly Error FlightNotExist = new("FlightNotExist", "The specified flight does not exist.");
    public static readonly Error FlightDuplicate = new("FlightDuplicate", "There is a flight already with given information.");
    public static readonly Error NoFlightInRoute = new("NoFlightInRoute", "There is no flight in specified route.");
    public static readonly Error OverAllocationForFix = new("OverAllocationForFix", "The allotment value you are trying to enter exceeds the available fix capacity.");
    public static readonly Error OverAllocationForProRate = new("OverAllocationForProRate", "The allotment value you are trying to enter exceeds the available prorate capacity.");
    public static readonly Error BusinessUnitAndRoteNotMatch = new("BusinessUnitAndRoteNotMatch", "Business unit and route does not match.");
    public static readonly Error EntityInUseWarning = new("EntityInUseWarning", "This record is used on other pages.");
    public static readonly Error AirportInUseInRoute = new("AirportInUseInRoute", "This airport is used on the Route page.");
    public static readonly Error AirportInUseInFlightList = new("AirportInUseInFlightList", "This airport is used on the Flight List page.");
    public static readonly Error AirportInUseInFlightPrice = new("AirportInUseInFlightPrice", "This airport is used on the Flight Price page.");
    public static readonly Error BusinessUnitInUseInRoute = new("BusinessUnitInUseInRoute", "This region is used on the Route page.");
    public static readonly Error BusinessUnitInUseInAllotment = new("BusinessUnitInUseInAllotment", "This region is used on the Allotment page.");
    public static readonly Error BusinessUnitInUseInFlightList = new("BusinessUnitInUseInFlightList", "This region is used on the Flight List page.");
    public static readonly Error BusinessUnitInUseInFlightPrice = new("BusinessUnitInUseInFlightPrice", "This region is used on the Flight Price page.");
    public static readonly Error SeasonInUseInFareLevel = new("SeasonInUseInFareLevel", "This season is used on the Fare Level page.");
    public static readonly Error SeasonInUseInAllotment = new("SeasonInUseInAllotment", "This season is used on the Allotment page.");
    public static readonly Error SeasonInUseInFlightList = new("SeasonInUseInFlightList", "This season is used on the Flight List page.");
    public static readonly Error SeasonInUseInFlightPrice = new("SeasonInUseInFlightPrice", "This season is used on the Flight Price page.");
    public static readonly Error SeasonInUseInAllotmentManagement = new("SeasonInUseInAllotmentManagement", "Used in the Allotment Management record this season.");
    public static readonly Error PriceProfileInUseInFareLevel = new("PriceProfileInUseInFareLevel", "This price profile is used on the Fare Level page.");
    public static readonly Error PriceProfileInUseInAllotment = new("PriceProfileInUseInAllotment", "This price profile is used on the Allotment page.");
    public static readonly Error PriceProfileInUseInFlightPrice = new("PriceProfileInUseInFlightPrice", "This price profile is used on the Flight Price page.");
    public static readonly Error RouteInUseInAllotment = new("RouteInUseInAllotment", "This route is used on the Allotment page.");
    public static readonly Error RouteInUseInAllotmentManagement = new("RouteInUseInAllotmentManagement", "This route is used in the Allotment Management record.");
    public static readonly Error FareLevelInUseInFlightPrice = new("FareLevelInUseInFlightPrice", "This fare level is used on the Flight Price page.");
    public static readonly Error AirlineInUseInFlightList = new("AirlineInUseInFlightList", "This airline is used on the Flight List page.");
    public static readonly Error EmailAlreadyInUse = new("EmailAlreadyInUse", "This email address is being used by another user.");
    public static readonly Error RequiredFieldName = new("RequiredFieldName", "Season Name field is required.");
    public static readonly Error RequiredFieldCode = new("RequiredFieldCode", "Season Code field is required.");
    public static readonly Error RequiredFieldStartDate = new("RequiredFieldStartDate", "Start Date field is required.");
    public static readonly Error RequiredFieldEndDate = new("RequiredFieldEndDate", "End Date field is required.");
    public static readonly Error RequiredFieldSubSeasons = new("RequiredFieldSubSeasons", "SSIM Season Codes field is required.");
    public static readonly Error FileTemplateDuplicate = new("FileTemplateDuplicate", "This file template is already exist.");
    public static readonly Error FileTemplateNotExist = new("FileTemplateNotExist", "This file template does not exist.");
    public static readonly Error RouteInUseInFlightList = new("RouteInUseInFlightList", "This Route is used on the Flight List page.");
    public static readonly Error BusinessUnitInUseInAllotmentManagement = new("BusinessUnitInUseInAllotmentManagement", "This business unit is used in the Allotment Management record.");
    public static readonly Error ContractHistoryNotExist = new("ContractHistoryNotExist", "The specified contract is not exist.");
    public static readonly Error ContractFileHistoryNotExist = new("ContractHistoryNotExist", "The specified contract file is not exist.");
    public static readonly Error MasterDataExist = new("MasterDataExist", "The specified data does not exist.");
    public static readonly Error MasterDataDuplicate = new("MasterDataDuplicate", "The specified notification data is already exist.");
    public static readonly Error PrePaymentCapacityCanNotBeExceeded = new("Prepaymentcapacitycannotbeexceeded", "The capacity defined for Prepayment cannot be exceeded");
    public static readonly Error SubSeasonNotExist = new("SubSeasonNotExist", "The SSIM Season not exist.");
    public static readonly Error SFTPConnectionError = new("SftpConnectionError", "SftpConnectionError");
    public static readonly Error CurrencyNotExist = new("CurrencyNotExist", "CurrencyNotExist");
    public static readonly Error CurrencyInInvalidDateRange = new("CurrencyInInvalidDateRange", "Currency is in invalid date range.");
    public static readonly Error CurrencyUsedByFlightPrice = new("CurrencyUsedByFlightPrice", "Currency is in used by flight price.");
    public static readonly Error FlightPriceDuplicate = new("FlightPriceDuplicate", "Flight price is duplicated.");
    public static readonly Error MasterDataNotExist = new("MasterDataNotExist", "The specified data does not exist.");
    public static readonly Error CompanyAndAgencyMismatch = new("CompanyAndAgencyMismatch", "Şirketin ajansı ile kullanıcının ajansı uyumsuz.");
}

